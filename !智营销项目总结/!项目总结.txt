一个请求
1，输入网址
2，搜索DNS获取ＩＰ地址,(浏览器dns缓存 操作系统dns缓存 )
3，发起三次握手(HTTP基于TCP)
4，tcp/ip 链接建立起来后，浏览器就可以向服务器发送http请求 

ajax请求
	1，进入bls(百度负载均衡器)
	2，bls进入nginx(docker容器,路由请求)
	3，API(权限空，日志统计等)
	4，API网关（权限控制，日志统计等）
	5，saas层(业务层)
	6，pass层(基础服务层)
	7，IaaS层(基础设施层) kafka(消息队列：解决服务之间调用的耦合) mysql(数据库) redis(数据缓存) 
	8，控制权限（定义页面名称+[需要调用的接口地址].join(',')）
	实现了,整个系统实现了微服务，集群，分布式,达到了高内聚低耦合,零配置

docker配置
	1，docker-register (docker镜像仓库：存放为所有服务镜像，运行环境，源码)
	2，docker-compose (镜像组配置，环境变量配置)
	3，Swarm  master woker  通过主节点控制其他机器,实现自动化配置 

	零配置
	1，http请求进入,命名规范 如：os/v1,请求os这类服务，dockerdns服务发现
	2，docker-compose（环境变量配置）

静态资源请求
	1，进入bls(百度负载均衡器)
	2，bls进入nginx(docker容器,路由请求)
	3，资金资源服务器返回资源

进入前端架构
	浏览器内核：渲染引擎 Js引擎
	1，vuex：页面共享数据解耦，类似于kafka
	2，vue-route: 页面路由处理
	3，vue-source:
	4，webpack 开发环境
	5，rollup代码打包
	6，js-css思想是否正确，css模块化处理方案
	7，大数据量表格优化方案，数据拿下来，监听滚动进行渲染
	8，yarn 优化npm
	9，jsdoc 注释规范
	10，typescript

在网关定义
	"a/b/path1"：[name1:API1,name2:API2]

微服务(服务拆分)
	1,vue-framework-basic 
		基础组件(基于element封装)，布局组件，dirictive，filter，基于element ui 扩展
	2,vue-framework-extra  
		(API封装,swagger-mock,variable.less,redis.js,is.js,dataDeal.js)
	3,vue-framework-build 
		自动化集成工具(vue架构打包，手脚架,自动根据文件夹生成路由,测试包,API代理,服务端渲染 开发样板文件) 
	4,vue-framework-doc 
		开发文档(书写规范，开发流程，注意事项，细节优化，开发人员心得)=>命名即思维 


	1,vue-framework-sass 
	config.js(配置文件 build.read())=>index.js(插件集成) =>vue-route(根据目录自动生成) => 
	网关(权限控制,utils)  
	2,swagger-mock,variable.less,is.js,dataDeal.js)
	2,vue-framework-pass 基础组件(基于element封装)，布局组件，dirictive，filter
	3,vue-framework-iass vuex redis.js axios.js
nginx:vue-router
路由网关:vue-router 中全局钩子函数(http请求总体控制，权限控制，数据统计,mock数据模拟)

sass(软件即服务):插件(),
pass(平台即服务):基础组件库,布局组建,API请求(组合API)
iass(基础设施即服务):kafka:vuex  redis:localstorage(写一个服务)  DB:vue-source(ajax请求)

sass:应用页()(require API <API></API>数据转换,插入methods.API{getuser:})
pass:API(根据swagger文档自动生成),(基础组件，布局组件，指令库)，variable.less(css变量)，vuex-cookie
iass:vuex(用户名等，顶级数据，在cookie里面存一份,防止刷新问题)，redis.js(window.unloader,存取内存数据,cookie类型，localstorage类型，内存类型)，,localstory(数据持久化),manifest,utils.js(常用验证正则，list2Tree,removeArray),axios.js

架构师
1,了解并优化整个架构流程
2,技术选型适合该系统,该团队
3,在架构层次考虑开发中可能遇到的问题，并尽可能在架构层次完善并解决这些问题

问题一,自己的module引用
问题二,打包工具怎么写
问题三,根据文件夹生成路由
问题四,API代理
问题五,http滚动样式


产品： 智营销(解决中小企业营销难题)
客户(企业)(cus) 平台(ap) 服务商(sp)	供应商(cp)
内商城	外商城
1，1门户 外商城
2，5系统	 客户系统 平台管理 服务商管理	供应商管理 内商城
插件:cms 小蜜蜂 塑源	促销（优惠券，大转盘）

1，小蜜蜂 cms 
2，平台	


